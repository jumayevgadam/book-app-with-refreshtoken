{
    "swagger": "2.0",
    "info": {
        "description": "book app with refresh token.",
        "title": "BOOK-APP-WITH-REFRESH-TOKEN api documentation",
        "termsOfService": "http://swagger.io/terms",
        "contact": {
            "name": "Gadam Jumayev",
            "url": "https://github.com/jumayevgadam",
            "email": "hypergadam@gmail.com"
        },
        "version": "2.0"
    },
    "host": "localhost:4000",
    "basePath": "/api/v1",
    "paths": {
        "/author/register": {
            "post": {
                "description": "create author with properties.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHORS"
                ],
                "summary": "CREATE-AUTHOR.",
                "operationId": "create-author",
                "parameters": [
                    {
                        "type": "string",
                        "name": "avatar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "biography",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 20,
                        "minLength": 6,
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    }
}